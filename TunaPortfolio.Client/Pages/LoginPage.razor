@using System.ComponentModel.DataAnnotations
@rendermode InteractiveWebAssembly
@page "/login"

<section class="bg-[#EEF7FF] flex h-screen items-center justify-center">
    <div class="container 2xl:px-80 xl:px-52">
        <div class="shadow-[0_2px_8px_rgba(99,99,99,0.2)] overflow-hidden rounded-lg bg-white">
            <div class="grid gap-6 xl:grid-cols-5 lg:grid-cols-3 md:grid-cols-2">

                <div class="from-[#00B4DB] to-[#0083B0] space-y-6 bg-gradient-to-r p-7 text-white xl:col-span-2 lg:col-span-1">
                    <span class="font-semibold uppercase tracking-widest">BLAZOR.DESIGN</span>
                    <div class="flex h-full flex-col justify-center text-center">
                        <h1 class="mb-4 text-3xl">Get Started</h1>
                        <p class="font-normal leading-relaxed text-white">Create a new account and unlock a world of possibilities with us!</p>
                        <div class="mt-8">
                            <button @onclick="HandleSignUp" class="rounded-full border px-14 py-2.5 text-sm font-medium text-white transition duration-300 hover:bg-white hover:text-[#03AED2]">Sign Up</button>
                        </div>
                    </div>
                </div>

                <div class="m-5 xl:col-span-3 lg:col-span-2">
                    <div class="text-center">
                        <h1 class="mb-3 text-3xl text-sky-600">Welcome Back!</h1>
                        <div class="my-5 flex items-center justify-center gap-2">
                            <button @onclick=@(() => HandleSocialLogin("google")) class="flex h-10 w-10 items-center justify-center rounded-full border transition duration-300 hover:bg-gradient-to-r hover:from-[#00B4DB] hover:to-[#0083B0] hover:text-white">
                                <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="24px" height="24px" viewBox="0 0 48 48">
                                    <path fill="#fbc02d" d="M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12	s5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24s8.955,20,20,20	s20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z"></path>
                                    <path fill="#e53935" d="M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039	l5.657-5.657C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z"></path>
                                    <path fill="#4caf50" d="M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36	c-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z"></path>
                                    <path fill="#1565c0" d="M43.611,20.083L43.595,20L42,20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571	c0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z"></path>
                                </svg>
                            </button>
                            <button @onclick=@(() => HandleSocialLogin("linkedin")) class="flex h-10 w-10 items-center justify-center rounded-full border transition duration-300 hover:bg-gradient-to-r hover:from-[#00B4DB] hover:to-[#0083B0] hover:text-white">
                                <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="24px" height="24px" viewBox="0 0 48 48">
                                    <path fill="#0288D1" d="M42,37c0,2.762-2.238,5-5,5H11c-2.761,0-5-2.238-5-5V11c0-2.762,2.239-5,5-5h26c2.762,0,5,2.238,5,5V37z"></path>
                                    <path fill="#FFF" d="M12 19H17V36H12zM14.485 17h-.028C12.965 17 12 15.888 12 14.499 12 13.08 12.995 12 14.514 12c1.521 0 2.458 1.08 2.486 2.499C17 15.887 16.035 17 14.485 17zM36 36h-5v-9.099c0-2.198-1.225-3.698-3.192-3.698-1.501 0-2.313 1.012-2.707 1.99C24.957 25.543 25 26.511 25 27v9h-5V19h5v2.616C25.721 20.5 26.85 19 29.738 19c3.578 0 6.261 2.25 6.261 7.274L36 36 36 36z"></path>
                                </svg>
                            </button>
                        </div>
                        <p class="text-sm font-medium leading-relaxed">Or use your email and password</p>
                        <EditForm Model="loginModel" OnSubmit="HandleSubmit">
                            <div class="mt-10 space-y-5">

                                <div class="relative">
                                    <label for="email" class="mb-1 block text-sm font-medium text-gray-700">Email: @Email</label>
                                    <input class="w-full rounded-lg border border-blue-300 px-4 py-3.5 text-base text-gray-700 placeholder-gray-500 focus:outline-none focus:border-transparent focus:ring-2 focus:ring-gradient-to-r focus:ring-from-[#00B4DB] focus:ring-to-[#0083B0]" type="email" id="email" name="email" placeholder="Enter your email" @oninput="IsimDegistir">
                                </div>

                                <div class="relative">
                                    <label for="pwd" class="mb-1 block text-sm font-medium text-gray-700">Password</label>
                                    <input class="w-full rounded-lg border border-blue-300 px-4 py-3.5 text-base text-gray-700 placeholder-gray-500 focus:outline-none focus:border-transparent focus:ring-2 focus:ring-gradient-to-r focus:ring-from-[#00B4DB] focus:ring-to-[#0083B0]" type="password" id="pwd" name="pwd" placeholder="Enter your password">
                                </div>
                                @*  <div class="relative">
                                <InputText @bind-Value="loginModel.Email" class="w-full rounded-lg border-gray-300 px-4 py-2.5 pl-11 text-sm text-gray-500 focus:border-gray-400" type="email" id="email" placeholder="Email" />
                                <ValidationMessage For="() => loginModel.Email" class="text-red-600 m-1" />
                                </div>
                                <div class="relative">
                                <InputText @bind-Value="loginModel.Password" class="w-full rounded-lg border-gray-300 px-4 py-2.5 pl-11 text-sm text-gray-500 focus:border-gray-400" type="password" id="passwd" placeholder="Password" />
                                <ValidationMessage For="() => loginModel.Password" class="text-red-600 m-1" />
                                </div> *@
                            </div>
                            <div class="mt-8 flex justify-between">
                                <button @onclick="HandleForgotPassword" class="from-[#00B4DB] to-[#0083B0] rounded-full bg-gradient-to-r px-8 py-3 text-sm font-medium text-white transition duration-300 hover:from-[#0083B0] hover:to-[#00B4DB]">Forgot Your Password?</button>
                                <button type="submit" class="from-[#00B4DB] to-[#0083B0] rounded-full bg-gradient-to-r px-14 py-3 text-sm font-medium text-white transition duration-300 hover:from-[#0083B0] hover:to-[#00B4DB]">Sign In</button>
                            </div>
                        </EditForm>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>

@code {
    private string Email { get; set; }

    private void IsimDegistir(ChangeEventArgs e)
    {
        Email = e.Value.ToString();
    }

    private LoginModel loginModel = new LoginModel();

    private async Task HandleSignUp()
    {
        // Handle Sign Up Logic
    }

    private async Task HandleForgotPassword()
    {
        // Handle Forgot Password Logic
    }

    private async Task HandleSubmit()
    {
        // Handle Form Submit Logic
    }

    private async Task HandleSocialLogin(string socialLoginType)
    {
        // Handle Social Login Logic
    }

    // Login model class
    internal class LoginModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [MinLength(6)]
        public string Password { get; set; }
    }

}
